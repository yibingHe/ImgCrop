(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CropImg"] = factory();
	else
		root["CropImg"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/CropImg.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/CropImg.js":
/*!************************!*\
  !*** ./src/CropImg.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* var CropImg = function () { \n\n    var DefaultOption = {\n        stepWidth:16,\n        stepHeight:9,\n        isCircle:false,\n        width:100,\n        height: 100,\n        callback: function () { }\n    }\n\n\n    var CropImg = function (url, option) { \n        if (!url) {\n            console.error('没有找到需要裁剪的图片')\n            return\n        }\n        if (!option.callback) { \n            console.error('缺少获取裁剪结果的回调callback')\n            return\n        }\n        this.option = DefaultOption\n        this.__setOption__(option)\n        this.el = document.createElement('div')\n        this.el.setAttribute('style', 'display: flex;500px 100px;justify-content:center;height: 100%;margin: 10px;grid-column-gap: 20px')\n        \n        var cropBox = document.createElement('div')\n        cropBox.setAttribute('class', 'cropBox')\n        cropBox.setAttribute('style', 'background-color: #f2f2f2;width:500px')\n\n        this.targetImg = document.createElement('img')\n        this.targetImg.setAttribute('class', 'croptargetImgBox')\n        this.targetImg.setAttribute('style', 'width:100%')\n        this.targetImg.setAttribute('src', url)\n        cropBox.appendChild(this.targetImg)\n        this.el.appendChild(cropBox)\n\n        var right = document.createElement('div')\n        right.setAttribute('style', 'padding:0 5px')\n        \n        this.preview = document.createElement('div')\n        this.preview.setAttribute('class', 'cropBox')\n        var style = \"width:\"+10*this.option.stepWidth+\"px;height:\"+10*this.option.stepHeight+\"px;box-shadow:0 0 2px 0 #000\"\n        this.preview.setAttribute('style', style)\n        \n        right.appendChild(this.preview)\n\n        var stepTip = document.createElement('div')\n        stepTip.setAttribute('class', 'stepTip')\n        stepTip.setAttribute('style', 'color: #222;text-align: center;padding:5px 0 0 0')\n        stepTip.innerText = this.option.stepWidth + ':' + this.option.stepHeight;\n        right.appendChild(stepTip)\n        this.el.appendChild(right)\n\n        this.initCrop()\n        \n    }\n\n    CropImg.prototype.__setOption__ = function (option) {\n        this.option.stepWidth = option.stepWidth?option.stepWidth:DefaultOption.stepWidth\n        this.option.stepHeight = option.stepHeight?option.stepHeight:DefaultOption.stepHeight\n        this.option.isCircle = option.isCircle?option.isCircle:DefaultOption.isCircle\n        this.option.width = option.width?option.width:DefaultOption.width\n        this.option.height = option.height ? option.height : DefaultOption.height\n        this.option.callback = option.callback\n    }\n\n    CropImg.prototype.initCrop = function () { \n        var that = this;\n        this.roundedCanvas = ''\n        \n        $(this.targetImg).cropper({\n            aspectRatio: this.option.stepWidth/this.option.stepHeight,\n            viewMode: 1,\n            crop: function () {\n                var croppedCanvas = that.cropper.getCroppedCanvas();\n                that.roundedCanvas = that.getRoundedCanvas(croppedCanvas);\n                var roundedImage = document.createElement('img');\n                roundedImage.src = that.roundedCanvas.toDataURL()\n                that.preview.innerHTML = ''\n                that.preview.appendChild(roundedImage);\n            }\n        })\n\n        this.cropper = $(this.targetImg).data('cropper');\n        if (this.option.isCircle) {\n            this.preview.style.borderRadius = '50%'\n            this.el.getElementsByClassName('cropper-view-box')[0].style.borderRadius = '50%'\n            this.el.getElementsByClassName('cropper-face')[0].style.borderRadius = '50%'\n        }\n\n        this.render()\n    }\n\n    CropImg.prototype.getRoundedCanvas = function (sourceCanvas) { \n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        canvas.width = this.option.stepWidth*10;\n        canvas.height = this.option.stepHeight*10;\n        context.imageSmoothingEnabled = true;\n        context.drawImage(sourceCanvas, 0, 0, this.option.stepWidth*10, this.option.stepHeight*10);\n        context.globalCompositeOperation = 'destination-in';\n        context.beginPath();\n        if(this.option.isCircle) context.arc(50, 50, 50, 0, 2 * Math.PI, true);\n        context.fill();\n        return canvas;\n    }\n\n    CropImg.prototype.render = function () { \n        document.getElementsByTagName('body')[0].appendChild(this.el)\n        var that = this;\n        layer.open({\n            title: '编辑头像',\n            content: $(this.el),\n            area: ['800px', '600px'],\n            type: 1,\n            btn: ['保存', '取消'],\n            btn1: function () {\n                that.submitImg();\n            },\n            btn2: function () {\n\n            },\n            end: function (index, layero) {\n                layer.close(index);\n            }\n        })\n    }\n\n    CropImg.prototype.submitImg = function () { \n        var url = this.roundedCanvas.toDataURL()\n        var file = dataURLtoFile(url,'')\n        var formData = new FormData();\n        formData.append(\"file\", file); \n\n        this.option.callback({\n            url: url,\n            file: dataURLtoFile(url, ''),\n            formData:formData\n        })\n    }\n\n    var dataURLtoFile = function(dataurl, filename) {//将base64转file对象\n        var arr = dataurl.split(','),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new File([u8arr], filename, {type: mime});\n    }\n\n    return CropImg\n}\n\nmodule.exports = CropImg\n */\nvar CropImg =\n/*#__PURE__*/\nfunction () {\n  function CropImg(url, option) {\n    _classCallCheck(this, CropImg);\n\n    if (!url) {\n      console.error('没有找到需要裁剪的图片');\n      return;\n    }\n\n    if (!option.callback) {\n      console.error('缺少获取裁剪结果的回调callback');\n      return;\n    }\n\n    this.option = {\n      stepWidth: 16,\n      stepHeight: 9,\n      isCircle: false,\n      width: 100,\n      height: 100,\n      callback: function callback() {}\n    };\n\n    this.__setOption__(option);\n\n    this.el = document.createElement('div');\n    this.el.setAttribute('style', 'display: flex;500px 100px;justify-content:center;height: 100%;margin: 10px;grid-column-gap: 20px');\n    var cropBox = document.createElement('div');\n    cropBox.setAttribute('class', 'cropBox');\n    cropBox.setAttribute('style', 'background-color: #f2f2f2;width:500px');\n    this.targetImg = document.createElement('img');\n    this.targetImg.setAttribute('class', 'croptargetImgBox');\n    this.targetImg.setAttribute('style', 'width:100%');\n    this.targetImg.setAttribute('src', url);\n    cropBox.appendChild(this.targetImg);\n    this.el.appendChild(cropBox);\n    var right = document.createElement('div');\n    right.setAttribute('style', 'padding:0 5px');\n    this.preview = document.createElement('div');\n    this.preview.setAttribute('class', 'cropBox');\n    var style = \"width:\" + 10 * this.option.stepWidth + \"px;height:\" + 10 * this.option.stepHeight + \"px;box-shadow:0 0 2px 0 #000\";\n    this.preview.setAttribute('style', style);\n    right.appendChild(this.preview);\n    var stepTip = document.createElement('div');\n    stepTip.setAttribute('class', 'stepTip');\n    stepTip.setAttribute('style', 'color: #222;text-align: center;padding:5px 0 0 0');\n    stepTip.innerText = this.option.stepWidth + ':' + this.option.stepHeight;\n    right.appendChild(stepTip);\n    this.el.appendChild(right);\n    this.initCrop();\n  }\n\n  _createClass(CropImg, [{\n    key: \"__setOption__\",\n    value: function __setOption__(option) {\n      if (option.stepWidth) this.option.stepWidth = option.stepWidth;\n      if (option.stepHeight) this.option.stepHeight = option.stepHeight;\n      if (option.isCircle) this.option.isCircle = option.isCircle;\n      if (option.width) this.option.width = option.width;\n      if (option.height) this.option.height = option.height;\n      this.option.callback = option.callback;\n    }\n  }, {\n    key: \"getRoundedCanvas\",\n    value: function getRoundedCanvas(sourceCanvas) {\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = this.option.stepWidth * 10;\n      canvas.height = this.option.stepHeight * 10;\n      context.imageSmoothingEnabled = true;\n      context.drawImage(sourceCanvas, 0, 0, this.option.stepWidth * 10, this.option.stepHeight * 10);\n      context.globalCompositeOperation = 'destination-in';\n      context.beginPath();\n      if (this.option.isCircle) context.arc(50, 50, 50, 0, 2 * Math.PI, true);\n      context.fill();\n      return canvas;\n    }\n  }, {\n    key: \"initCrop\",\n    value: function initCrop() {\n      var that = this;\n      this.roundedCanvas = '';\n      $(this.targetImg).cropper({\n        aspectRatio: this.option.stepWidth / this.option.stepHeight,\n        viewMode: 1,\n        crop: function crop() {\n          var croppedCanvas = that.cropper.getCroppedCanvas();\n          that.roundedCanvas = that.getRoundedCanvas(croppedCanvas);\n          var roundedImage = document.createElement('img');\n          roundedImage.src = that.roundedCanvas.toDataURL();\n          that.preview.innerHTML = '';\n          that.preview.appendChild(roundedImage);\n        }\n      });\n      this.cropper = $(this.targetImg).data('cropper');\n\n      if (this.option.isCircle) {\n        this.preview.style.borderRadius = '50%';\n        this.el.getElementsByClassName('cropper-view-box')[0].style.borderRadius = '50%';\n        this.el.getElementsByClassName('cropper-face')[0].style.borderRadius = '50%';\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      document.getElementsByTagName('body')[0].appendChild(this.el);\n      var that = this;\n      layer.open({\n        title: '编辑头像',\n        content: $(this.el),\n        area: ['800px', '600px'],\n        type: 1,\n        btn: ['保存', '取消'],\n        btn1: function btn1() {\n          that.submitImg();\n        },\n        btn2: function btn2() {},\n        end: function end(index, layero) {\n          layer.close(index);\n        }\n      });\n    }\n  }, {\n    key: \"submitImg\",\n    value: function submitImg() {\n      var url = this.roundedCanvas.toDataURL();\n      var file = this.dataURLtoFile(url, '');\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      this.option.callback({\n        url: url,\n        file: this.dataURLtoFile(url, ''),\n        formData: formData\n      });\n    }\n  }, {\n    key: \"dataURLtoFile\",\n    value: function dataURLtoFile(dataurl, filename) {\n      //将base64转file对象\n      var arr = dataurl.split(','),\n          mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]),\n          n = bstr.length,\n          u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    }\n  }]);\n\n  return CropImg;\n}();\n\nmodule.exports = CropImg;\n\n//# sourceURL=webpack://%5Bname%5D/./src/CropImg.js?");

/***/ })

/******/ });
});